/*
 * Copyright (c) 2006 - 2010 LinogistiX GmbH
 * 
 *  www.linogistix.com
 *  
 *  Project myWMS-LOS
 */
package de.linogistix.wmsprocesses.processes.treat_order.gui.gui_builder;

import de.linogistix.common.gui.component.controls.BOAutoFilteringComboBox;
import de.linogistix.common.gui.component.view.LOSListChooserView;
import de.linogistix.common.gui.component.view.LOSListView;
import de.linogistix.common.gui.component.controls.LOSTextField;
import de.linogistix.common.gui.listener.TopComponentListener;
import de.linogistix.los.inventory.model.LOSOrderRequest;
import de.linogistix.los.inventory.model.LOSOrderRequestPosition;
import de.linogistix.los.location.model.LOSStorageLocation;
import java.awt.BorderLayout;
import javax.swing.JLabel;
import javax.swing.JTextArea;

/**
 *
 * @author  Jordan
 */
public class AbstractTreatOrderCenterPanel 
                    extends javax.swing.JPanel 
                    implements TopComponentListener
{

    private BOAutoFilteringComboBox<LOSOrderRequest> orderComboBox;
    
    private BOAutoFilteringComboBox<LOSOrderRequestPosition> orderPositionComboBox;    
    
    private BOAutoFilteringComboBox<LOSStorageLocation> targetPlaceComboBox;
    
    /** Creates new form AbstractTreatOrderCenterPanel */
    public AbstractTreatOrderCenterPanel() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        orderComboBoxPanel = new javax.swing.JPanel();
        orderPositionComboBoxPanel = new javax.swing.JPanel();
        pickRequestListPanel = new LOSListView();
        prefixTextField = new LOSTextField();
        targetPlaceComboBoxPanel = new javax.swing.JPanel();
        addPickRequestButton = new javax.swing.JButton();
        infoPanel = new javax.swing.JPanel();
        orderInfoPanel = new javax.swing.JPanel();
        clientLabel = new javax.swing.JLabel();
        clientValueLabel = new javax.swing.JLabel();
        itemDataLabel = new javax.swing.JLabel();
        itemDataValueLabel = new javax.swing.JLabel();
        lotLabel = new javax.swing.JLabel();
        lotValueLabel = new javax.swing.JLabel();
        commentPanel = new javax.swing.JPanel();
        commentLabel = new javax.swing.JLabel();
        commentScrollPane = new javax.swing.JScrollPane();
        commentTextArea = new javax.swing.JTextArea();
        warningLabel = new javax.swing.JLabel();
        amountPanel = new javax.swing.JPanel();
        requiredAmountLabel = new javax.swing.JLabel();
        requiredAmountValueLabel = new javax.swing.JLabel();
        chosenAmountLabel = new javax.swing.JLabel();
        chosenAmountValueLabel = new javax.swing.JLabel();
        chooseStockViewPanel = new LOSListChooserView();

        setLayout(new java.awt.GridBagLayout());

        orderComboBoxPanel.setMinimumSize(new java.awt.Dimension(200, 40));
        orderComboBoxPanel.setPreferredSize(new java.awt.Dimension(200, 40));
        orderComboBoxPanel.setLayout(new java.awt.BorderLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        add(orderComboBoxPanel, gridBagConstraints);

        orderPositionComboBoxPanel.setMinimumSize(new java.awt.Dimension(200, 40));
        orderPositionComboBoxPanel.setPreferredSize(new java.awt.Dimension(200, 40));
        orderPositionComboBoxPanel.setLayout(new java.awt.BorderLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        add(orderPositionComboBoxPanel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 0, 0);
        add(pickRequestListPanel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        add(prefixTextField, gridBagConstraints);

        targetPlaceComboBoxPanel.setLayout(new java.awt.BorderLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        add(targetPlaceComboBoxPanel, gridBagConstraints);

        addPickRequestButton.setActionCommand("ADD_PICKREQUEST");
        addPickRequestButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        addPickRequestButton.setMinimumSize(new java.awt.Dimension(150, 22));
        addPickRequestButton.setPreferredSize(new java.awt.Dimension(150, 22));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        add(addPickRequestButton, gridBagConstraints);

        infoPanel.setLayout(new java.awt.GridBagLayout());

        orderInfoPanel.setMinimumSize(new java.awt.Dimension(200, 62));
        orderInfoPanel.setPreferredSize(new java.awt.Dimension(200, 62));
        orderInfoPanel.setLayout(new java.awt.GridBagLayout());

        clientLabel.setText("jLabel1"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        orderInfoPanel.add(clientLabel, gridBagConstraints);

        clientValueLabel.setText("jLabel1"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        orderInfoPanel.add(clientValueLabel, gridBagConstraints);

        itemDataLabel.setText("jLabel1"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        orderInfoPanel.add(itemDataLabel, gridBagConstraints);

        itemDataValueLabel.setText("jLabel1"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 0, 0);
        orderInfoPanel.add(itemDataValueLabel, gridBagConstraints);

        lotLabel.setText("jLabel1"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        orderInfoPanel.add(lotLabel, gridBagConstraints);

        lotValueLabel.setText("jLabel1"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 0, 0);
        orderInfoPanel.add(lotValueLabel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        infoPanel.add(orderInfoPanel, gridBagConstraints);

        commentPanel.setMaximumSize(new java.awt.Dimension(2147483647, 70));
        commentPanel.setMinimumSize(new java.awt.Dimension(34, 70));
        commentPanel.setPreferredSize(new java.awt.Dimension(160, 70));
        commentPanel.setLayout(new java.awt.GridBagLayout());

        commentLabel.setText("jLabel1"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        commentPanel.add(commentLabel, gridBagConstraints);

        commentTextArea.setColumns(20);
        commentTextArea.setRows(5);
        commentScrollPane.setViewportView(commentTextArea);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        commentPanel.add(commentScrollPane, gridBagConstraints);

        warningLabel.setMinimumSize(new java.awt.Dimension(40, 40));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        commentPanel.add(warningLabel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.8;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 0);
        infoPanel.add(commentPanel, gridBagConstraints);

        amountPanel.setMaximumSize(new java.awt.Dimension(200, 2147483647));
        amountPanel.setMinimumSize(new java.awt.Dimension(200, 56));
        amountPanel.setPreferredSize(new java.awt.Dimension(200, 56));
        amountPanel.setLayout(new java.awt.GridBagLayout());

        requiredAmountLabel.setText("jLabel1"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        amountPanel.add(requiredAmountLabel, gridBagConstraints);

        requiredAmountValueLabel.setText("jLabel1"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 20);
        amountPanel.add(requiredAmountValueLabel, gridBagConstraints);

        chosenAmountLabel.setText("jLabel1"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.5;
        amountPanel.add(chosenAmountLabel, gridBagConstraints);

        chosenAmountValueLabel.setText("jLabel"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 20);
        amountPanel.add(chosenAmountValueLabel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        infoPanel.add(amountPanel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 0, 0);
        add(infoPanel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        add(chooseStockViewPanel, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    protected javax.swing.JButton addPickRequestButton;
    private javax.swing.JPanel amountPanel;
    private javax.swing.JPanel chooseStockViewPanel;
    protected javax.swing.JLabel chosenAmountLabel;
    public javax.swing.JLabel chosenAmountValueLabel;
    protected javax.swing.JLabel clientLabel;
    public javax.swing.JLabel clientValueLabel;
    private javax.swing.JLabel commentLabel;
    private javax.swing.JPanel commentPanel;
    public javax.swing.JScrollPane commentScrollPane;
    private javax.swing.JTextArea commentTextArea;
    private javax.swing.JPanel infoPanel;
    protected javax.swing.JLabel itemDataLabel;
    public javax.swing.JLabel itemDataValueLabel;
    protected javax.swing.JLabel lotLabel;
    public javax.swing.JLabel lotValueLabel;
    private javax.swing.JPanel orderComboBoxPanel;
    private javax.swing.JPanel orderInfoPanel;
    private javax.swing.JPanel orderPositionComboBoxPanel;
    private javax.swing.JPanel pickRequestListPanel;
    protected javax.swing.JPanel prefixTextField;
    protected javax.swing.JLabel requiredAmountLabel;
    public javax.swing.JLabel requiredAmountValueLabel;
    private javax.swing.JPanel targetPlaceComboBoxPanel;
    public javax.swing.JLabel warningLabel;
    // End of variables declaration//GEN-END:variables


    protected BOAutoFilteringComboBox<LOSOrderRequest> getOrderComboBox() {
        
        if(orderComboBox == null){
            orderComboBox = new BOAutoFilteringComboBox<LOSOrderRequest>(LOSOrderRequest.class);
            orderComboBoxPanel.add(orderComboBox, BorderLayout.WEST);
        }
        
        return orderComboBox;
    }
    
    protected BOAutoFilteringComboBox<LOSOrderRequestPosition> getOrderPositionComboBox() {
        
        if(orderPositionComboBox == null){
            orderPositionComboBox = new BOAutoFilteringComboBox<LOSOrderRequestPosition>(LOSOrderRequestPosition.class);
            orderPositionComboBoxPanel.add(orderPositionComboBox, BorderLayout.WEST);
        }
        
        return orderPositionComboBox;
    }
    
    public BOAutoFilteringComboBox<LOSStorageLocation> getTargetPlaceComboBox(){
        
        if(targetPlaceComboBox == null){
            targetPlaceComboBox = new BOAutoFilteringComboBox<LOSStorageLocation>(LOSStorageLocation.class);
            targetPlaceComboBoxPanel.add(targetPlaceComboBox, BorderLayout.WEST);
        }
        
        return targetPlaceComboBox;
    }

    public LOSListView getPickRequestListView(){
        return (LOSListView) pickRequestListPanel;
    }
    
    public LOSListChooserView getStockChooserView(){
        return (LOSListChooserView) chooseStockViewPanel;
    }
    
    public LOSTextField getPrefixTextField(){
        return (LOSTextField) prefixTextField;
    }
    
    public JLabel getRequiredAmountLabel(){
        return requiredAmountValueLabel;
    }
    
    public JLabel getChosenAmountLabel(){
        return chosenAmountValueLabel;
    }
    
    public JLabel getClientLabel(){
        return clientValueLabel;
    }
    
    public JLabel getItemDataLabel(){
        return itemDataValueLabel;
    }
    
    public JLabel getLotLabel(){
        return lotValueLabel;
    }
    
    public JLabel getCommentLabel(){
        return commentLabel;
    }
    
    public JTextArea getCommentArea(){
        return commentTextArea;
    }
    
    /**
     *  -----------------------------------------------------------------------           
     *              Implementation of TopComponentListener
     *  -----------------------------------------------------------------------
     */
    public void componentOpened() { }

    public void componentClosed() {}

    public void componentActivated() {}

    public void componentDeactivated() {}

    public void componentHidden() {}

    public void componentShowing() {}
    
    // ------------------------------------------------------------------------
}
