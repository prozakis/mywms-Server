/*
 * Copyright (c) 2006 - 2010 LinogistiX GmbH
 * 
 *  www.linogistix.com
 *  
 *  Project myWMS-LOS
 */
package de.linogistix.wmsprocesses.processes.goodsreceipt.gui.gui_builder;

import de.linogistix.common.gui.component.other.NumericDocument;
import de.linogistix.inventory.browser.bo.BOStockUnit;
import de.linogistix.los.inventory.model.LOSGoodsReceiptType;
import de.linogistix.wmsprocesses.res.WMSProcessesBundleResolver;
import javax.swing.BorderFactory;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFormattedTextField;
import org.openide.util.NbBundle;

/**
 *
 * @author  trautm
 */
public abstract class AbstractPositionWizardLastPanelUI extends javax.swing.JPanel {

    /** Creates new form AbstractPositionWizardULPanel */
    public AbstractPositionWizardLastPanelUI() {
        initComponents();
        postInit();

        sameLabel.setText(
                NbBundle.getMessage(WMSProcessesBundleResolver.class, "GoodsreceiptCenterPanel.sameLabels")); // NOI18N

        typeLabel.setText(
                NbBundle.getMessage(WMSProcessesBundleResolver.class, "GoodsreceiptCenterPanel.receiptType")); // NOI18N
    }

    private void postInit() {
    }

    protected ComboBoxModel initComboBoxTypeModel() {
        DefaultComboBoxModel m = new DefaultComboBoxModel();
        for (LOSGoodsReceiptType t : LOSGoodsReceiptType.values()) {
            m.addElement(new TypeEntry(t));
        }
        return m;
    }

    public static final class TypeEntry {

        public LOSGoodsReceiptType type;

        public TypeEntry(LOSGoodsReceiptType type) {
            this.type = type;
        }

        @Override
        public String toString() {
            return NbBundle.getMessage(de.linogistix.common.res.CommonBundleResolver.class, type.toString());
        }

        @Override
        public boolean equals(Object obj) {
            if (obj == null) return false;
            if (! (obj instanceof TypeEntry)) return false;
            if(this == obj) return true;
            if (this.type == ((TypeEntry)obj).type) return true;
            else return false;
            
            
        }
        
        
    }

    public void clear() {
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        infoLabel = new javax.swing.JLabel();
        sameFormattedTextField1 = new javax.swing.JFormattedTextField();
        sameFormattedTextField1.setDocument(new NumericDocument());
        sameLabel = new javax.swing.JLabel();
        typeLabel = new javax.swing.JLabel();
        jComboBoxType = new javax.swing.JComboBox();

        setPreferredSize(new java.awt.Dimension(250, 110));
        setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        add(infoLabel, gridBagConstraints);

        sameFormattedTextField1.setPreferredSize(new java.awt.Dimension(25, 22));
        sameFormattedTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sameFormattedTextField1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        add(sameFormattedTextField1, gridBagConstraints);

        sameLabel.setText("identical Unit Load(s)"); // NOI18N
        sameLabel.setPreferredSize(new java.awt.Dimension(130, 22));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        add(sameLabel, gridBagConstraints);

        typeLabel.setText("Receipt type"); // NOI18N
        typeLabel.setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
        typeLabel.setMinimumSize(new java.awt.Dimension(61, 22));
        typeLabel.setPreferredSize(new java.awt.Dimension(61, 22));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        add(typeLabel, gridBagConstraints);

        jComboBoxType.setModel(initComboBoxTypeModel());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        add(jComboBoxType, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

private void sameFormattedTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sameFormattedTextField1ActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_sameFormattedTextField1ActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    protected javax.swing.JLabel infoLabel;
    protected javax.swing.JComboBox jComboBoxType;
    protected javax.swing.JFormattedTextField sameFormattedTextField1;
    private javax.swing.JLabel sameLabel;
    private javax.swing.JLabel typeLabel;
    // End of variables declaration//GEN-END:variables

    public JFormattedTextField getSameTextField(){
        return sameFormattedTextField1;
    }

}
