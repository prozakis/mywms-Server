/*
 * Copyright (c) 2006 - 2010 LinogistiX GmbH
 * 
 *  www.linogistix.com
 *  
 *  Project myWMS-LOS
 */
package de.linogistix.common.gui.gui_builder.windows;

import de.linogistix.common.res.CommonBundleResolver;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Point;
import java.awt.Toolkit;
import javax.swing.BorderFactory;
import org.openide.util.NbBundle;

/**
 *
 * @author  artur
 */
public class AbstractAppModalDialog extends javax.swing.JDialog {
    
    /** Creates new form AbstractHandStateAppDialog */
    public AbstractAppModalDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
//        setUndecorated(true);
        initComponents();
        postInit();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        titleLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        titleLabel.setText("");
        jPanel1.add(titleLabel);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AbstractAppModalDialog dialog = new AbstractAppModalDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables
 
    private void postInit() {
        titleLabel.setBorder(BorderFactory.createEmptyBorder(40,40,40,40));
        jPanel1.setBackground(Color.red);
        titleLabel.setForeground(Color.white);
        Font font = titleLabel.getFont();
        Font font2 = new Font(font.getName(),font.getStyle(),18);
        titleLabel.setFont(font2);
        this.setSize(new Dimension(500,200));
        this.invalidate();
        this.validate();
        this.repaint();
//        this.setLocation(getCenter(this.getPreferredSize()));        
        this.setLocation(getCenter(this.getSize()));                

   }
    
  public void setTitleText(String text) {
      titleLabel.setText(text);
  }  
    
  private Dimension calculateCenter(Dimension frameSize, Dimension screenSize) {
    if (frameSize.height > screenSize.height) {
      frameSize.height = screenSize.height;
    }
    if (frameSize.width > screenSize.width) {
      frameSize.width = screenSize.width;
    }
    return frameSize;
  }
    
  public Point getCenter(Dimension size) {
    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
    Dimension frameSize = calculateCenter(size, screenSize);
    //System.out.println("FrameSIZE "+frameSize.width+"  "+frameSize.height);
    Point p = new Point( (screenSize.width - frameSize.width) / 2, (screenSize.height - frameSize.height) / 2);
    return p;
  }
    
}
