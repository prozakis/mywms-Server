/*
 * Copyright (c) 2006 - 2010 LinogistiX GmbH
 * 
 *  www.linogistix.com
 *  
 *  Project myWMS-LOS
 */
package de.linogistix.common.bobrowser.query.gui.gui_builder;

import de.linogistix.common.bobrowser.bo.editor.PropertiesComboBoxModel;
import de.linogistix.common.res.CommonBundleResolver;
import de.linogistix.common.res.icon.IconResolver;
import de.linogistix.common.gui.component.controls.FlatButton;
import java.awt.event.KeyEvent;
import java.util.EventObject;
import javax.swing.Icon;

/**
 *
 * @author  trautm
 */
public abstract class AbstractBOQueryHeaderPanel extends javax.swing.JPanel {

    protected Icon sortAscIcon = new javax.swing.ImageIcon(
                                    IconResolver.class.getResource(
                                    "/de/linogistix/common/res/icon/sort-asc16.png"));
    
    protected Icon sortDescIcon = new javax.swing.ImageIcon(
                                    IconResolver.class.getResource(
                                    "/de/linogistix/common/res/icon/sort-desc16.png"));

    protected Icon exportExcelIcon = new javax.swing.ImageIcon(
                                        IconResolver.class.getResource(
                                        "/de/linogistix/common/res/icon/Excel.gif"));
    
    protected Icon reloadIcon = new javax.swing.ImageIcon(
                                    IconResolver.class.getResource(
                                    "/de/linogistix/common/res/icon/Reload.png"));
    
    protected Icon goFirstIcon = new javax.swing.ImageIcon(
                                    IconResolver.class.getResource(
                                    "/de/linogistix/common/res/icon/go-first.png"));
    
    protected Icon goPreviousIcon = new javax.swing.ImageIcon(
                                    IconResolver.class.getResource(
                                    "/de/linogistix/common/res/icon/go-previous.png")); 
    
    protected Icon goLastIcon = new javax.swing.ImageIcon(
                                    IconResolver.class.getResource(
                                    "/de/linogistix/common/res/icon/go-last.png"));
    
    protected Icon goNextIcon = new javax.swing.ImageIcon(
                                    IconResolver.class.getResource(
                                    "/de/linogistix/common/res/icon/go-next.png"));
    
    protected Icon detailToggleIcon = new javax.swing.ImageIcon(
                                    IconResolver.class.getResource(
                                    "/de/linogistix/common/res/icon/showDetail16.png"));
    
    /** Creates new form AbstractBOQueryHeaderPanel */
    public AbstractBOQueryHeaderPanel() {
        initComponents();
        postInit();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonPanel = new javax.swing.JPanel();
        reload = new javax.swing.JButton();
        queryLabel = new javax.swing.JLabel();
        queries = new javax.swing.JComboBox();
        sortLabel = new javax.swing.JLabel();
        jComboBoxOrderBy = new javax.swing.JComboBox();
        jButtonOrderIcon = new FlatButton("");
        jPanel1 = new javax.swing.JPanel();
        jSeparator3 = new javax.swing.JSeparator();
        firstPageButton = new javax.swing.JButton();
        backPageButton = new javax.swing.JButton();
        pageTextField = new javax.swing.JTextField();
        pageLabel = new javax.swing.JLabel();
        nextPageButton = new javax.swing.JButton();
        lastPageButton = new javax.swing.JButton();
        limitComboBox = new javax.swing.JComboBox();
        detailToogleButton = new javax.swing.JToggleButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        queryPanel = new javax.swing.JPanel();

        setLayout(new java.awt.BorderLayout());

        buttonPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        reload.setIcon(reloadIcon);
        reload.setToolTipText("null");
        reload.setFocusable(false);
        reload.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        reload.setMargin(new java.awt.Insets(2, 5, 2, 5));
        reload.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        reload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reloadActionPerformed(evt);
            }
        });
        buttonPanel.add(reload);

        queryLabel.setText("null");
        buttonPanel.add(queryLabel);

        queries.setPreferredSize(new java.awt.Dimension(150, 22));
        queries.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                queriesActionPerformed(evt);
            }
        });
        queries.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                queriesKeyReleased(evt);
            }
        });
        queries.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                queriesMouseClicked(evt);
            }
        });
        queries.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                queriesPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        buttonPanel.add(queries);

        sortLabel.setText("null");
        buttonPanel.add(sortLabel);

        jComboBoxOrderBy.setMaximumRowCount(25);
        jComboBoxOrderBy.setRenderer(new PropertiesComboBoxModel.BOBeanPropertiesBoxRenderer());
        jComboBoxOrderBy.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxOrderByItemStateChanged(evt);
            }
        });
        jComboBoxOrderBy.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                jComboBoxOrderByPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        buttonPanel.add(jComboBoxOrderBy);

        jButtonOrderIcon.setIcon(sortAscIcon);
        jButtonOrderIcon.setEnabled(false);
        jButtonOrderIcon.setFocusable(false);
        jButtonOrderIcon.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonOrderIcon.setMargin(new java.awt.Insets(2, 2, 2, 2));
        jButtonOrderIcon.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonOrderIcon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOrderIconActionPerformed(evt);
            }
        });
        buttonPanel.add(jButtonOrderIcon);

        jPanel1.setPreferredSize(new java.awt.Dimension(5, 5));
        buttonPanel.add(jPanel1);

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator3.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jSeparator3.setPreferredSize(new java.awt.Dimension(2, 25));
        buttonPanel.add(jSeparator3);

        firstPageButton.setIcon(goFirstIcon);
        firstPageButton.setText("");
        firstPageButton.setEnabled(false);
        firstPageButton.setMargin(new java.awt.Insets(2, 4, 2, 4));
        firstPageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstPageButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(firstPageButton);

        backPageButton.setIcon(goPreviousIcon);
        backPageButton.setText("");
        backPageButton.setEnabled(false);
        backPageButton.setMargin(new java.awt.Insets(2, 4, 2, 4));
        backPageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backPageButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(backPageButton);

        pageTextField.setText("1");
        pageTextField.setMinimumSize(new java.awt.Dimension(30, 20));
        pageTextField.setPreferredSize(new java.awt.Dimension(30, 19));
        pageTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                pageTextFieldKeyPressed(evt);
            }
        });
        buttonPanel.add(pageTextField);

        pageLabel.setText("/");
        pageLabel.setMaximumSize(new java.awt.Dimension(30, 14));
        pageLabel.setMinimumSize(new java.awt.Dimension(30, 14));
        pageLabel.setPreferredSize(new java.awt.Dimension(25, 14));
        buttonPanel.add(pageLabel);

        nextPageButton.setIcon(goNextIcon);
        nextPageButton.setText("");
        nextPageButton.setEnabled(false);
        nextPageButton.setMargin(new java.awt.Insets(2, 4, 2, 4));
        nextPageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextPageButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(nextPageButton);

        lastPageButton.setIcon(goLastIcon);
        lastPageButton.setText("");
        lastPageButton.setEnabled(false);
        lastPageButton.setMargin(new java.awt.Insets(2, 4, 2, 4));
        lastPageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastPageButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(lastPageButton);

        limitComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                limitComboBoxItemStateChanged(evt);
            }
        });
        buttonPanel.add(limitComboBox);

        detailToogleButton.setIcon(detailToggleIcon);
        detailToogleButton.setSelected(true);
        detailToogleButton.setToolTipText("null");
        detailToogleButton.setBorderPainted(false);
        detailToogleButton.setMargin(new java.awt.Insets(2, 4, 2, 4));
        detailToogleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detailToogleButtonActionPerformed(evt);
            }
        });
        detailToogleButton.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                detailToogleButtonStateChanged(evt);
            }
        });
        buttonPanel.add(detailToogleButton);

        jPanel3.setPreferredSize(new java.awt.Dimension(5, 5));
        buttonPanel.add(jPanel3);

        jPanel2.setPreferredSize(new java.awt.Dimension(5, 5));
        buttonPanel.add(jPanel2);

        add(buttonPanel, java.awt.BorderLayout.NORTH);

        queryPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        queryPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));
        add(queryPanel, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void postInit() {
        
        sortLabel.setText(org.openide.util.NbBundle.getMessage(CommonBundleResolver.class, "sortBy"));
        
        queryLabel.setText(org.openide.util.NbBundle.getMessage(CommonBundleResolver.class, "Query"));

        reload.setToolTipText(org.openide.util.NbBundle.getMessage(CommonBundleResolver.class, "reload_DESCR"));
        jButtonOrderIcon.setToolTipText(org.openide.util.NbBundle.getMessage(CommonBundleResolver.class, "sortByOrder_DESCR"));
        firstPageButton.setToolTipText(org.openide.util.NbBundle.getMessage(CommonBundleResolver.class, "firstPage_DESCR"));
        backPageButton.setToolTipText(org.openide.util.NbBundle.getMessage(CommonBundleResolver.class, "prevPage_DESCR"));
        nextPageButton.setToolTipText(org.openide.util.NbBundle.getMessage(CommonBundleResolver.class, "nextPage_DESCR"));
        lastPageButton.setToolTipText(org.openide.util.NbBundle.getMessage(CommonBundleResolver.class, "lastPage_DESCR"));
        detailToogleButton.setToolTipText(org.openide.util.NbBundle.getMessage(CommonBundleResolver.class, "detail_DESCR"));
        reload.setMnemonic(org.openide.util.NbBundle.getMessage(CommonBundleResolver.class, "reload_Mnemonic").charAt(0));

    }

private void reloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reloadActionPerformed
    reload();
}//GEN-LAST:event_reloadActionPerformed

private void queriesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_queriesActionPerformed
    //providerChangeEvent(evt);
}//GEN-LAST:event_queriesActionPerformed

private void queriesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_queriesKeyReleased
    if (evt.getKeyCode() == 10) {
        queriesPopupMenuWillBecomeInvisible((null));
    }
}//GEN-LAST:event_queriesKeyReleased

private void queriesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_queriesMouseClicked
}//GEN-LAST:event_queriesMouseClicked

private void queriesPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_queriesPopupMenuWillBecomeInvisible
    providerChangeEvent(evt);
}//GEN-LAST:event_queriesPopupMenuWillBecomeInvisible

private void jComboBoxOrderByItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxOrderByItemStateChanged

    PropertiesComboBoxModel.BOBeanPropertyEntry e;
    e = (PropertiesComboBoxModel.BOBeanPropertyEntry) jComboBoxOrderBy.getSelectedItem();
    jButtonOrderIcon.setEnabled(!e.isDoNotSort());

}//GEN-LAST:event_jComboBoxOrderByItemStateChanged

private void jComboBoxOrderByPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_jComboBoxOrderByPopupMenuWillBecomeInvisible
    reload();
}//GEN-LAST:event_jComboBoxOrderByPopupMenuWillBecomeInvisible

private void jButtonOrderIconActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOrderIconActionPerformed
    toggleSortMode();
}//GEN-LAST:event_jButtonOrderIconActionPerformed

private void firstPageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstPageButtonActionPerformed
    setFirstPage();
}//GEN-LAST:event_firstPageButtonActionPerformed

private void backPageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backPageButtonActionPerformed
    setBackPage();
}//GEN-LAST:event_backPageButtonActionPerformed

private void pageTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pageTextFieldKeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        setPage(getSelectedPage());
    }
}//GEN-LAST:event_pageTextFieldKeyPressed

private void nextPageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextPageButtonActionPerformed
    setNextPage();
}//GEN-LAST:event_nextPageButtonActionPerformed

private void lastPageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastPageButtonActionPerformed
    setLastPage();
}//GEN-LAST:event_lastPageButtonActionPerformed

private void limitComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_limitComboBoxItemStateChanged
    int resultsPerPage;
    if (limitComboBox.getSelectedIndex() == 5) {
        resultsPerPage = Integer.MAX_VALUE;
    } else {
        resultsPerPage = Integer.parseInt((String) limitComboBox.getSelectedItem());
    }
    setLimitPerPage(resultsPerPage);
    
}//GEN-LAST:event_limitComboBoxItemStateChanged

private void detailToogleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detailToogleButtonActionPerformed
    toggleDetail();
}//GEN-LAST:event_detailToogleButtonActionPerformed

private void detailToogleButtonStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_detailToogleButtonStateChanged
   
}//GEN-LAST:event_detailToogleButtonStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    protected javax.swing.JButton backPageButton;
    protected javax.swing.JPanel buttonPanel;
    private javax.swing.JToggleButton detailToogleButton;
    protected javax.swing.JButton firstPageButton;
    protected javax.swing.JButton jButtonOrderIcon;
    protected javax.swing.JComboBox jComboBoxOrderBy;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JSeparator jSeparator3;
    protected javax.swing.JButton lastPageButton;
    protected javax.swing.JComboBox limitComboBox;
    protected javax.swing.JButton nextPageButton;
    protected javax.swing.JLabel pageLabel;
    protected javax.swing.JTextField pageTextField;
    protected javax.swing.JComboBox queries;
    protected javax.swing.JLabel queryLabel;
    protected javax.swing.JPanel queryPanel;
    protected javax.swing.JButton reload;
    protected javax.swing.JLabel sortLabel;
    // End of variables declaration//GEN-END:variables

    //--------------------------------------------------------------------------
    
     public int getSelectedPage() {
        if (pageTextField.getText().trim().equals("") == false) {
            int page = Integer.parseInt(pageTextField.getText());
            if ((page >= 1) || (page <= getPageCount())) {
                return Integer.parseInt(pageTextField.getText());
            }
        }
        return 1;
     }
     
     
    //--------------------------------------------------------------------------
    
    public abstract void providerChangeEvent(EventObject evt);
    
    public abstract void reload();

    public abstract void orderByItemChangeEvent();
    
    public abstract void toggleSortMode();
    
    public abstract void setFirstPage();
    
    public abstract void setBackPage();
    
    public abstract void setNextPage();
    
    public abstract void setPage(int i);
    
    public abstract void setLastPage();
    
    public abstract void setLimitPerPage(int i);
    
    public abstract int getPageCount();
    
    public abstract void toggleDetail();

    //------------------------------------------------------------------------
    
    public javax.swing.JComboBox getJComboBoxOrderBy() {
        return jComboBoxOrderBy;
    }
    
     public javax.swing.JComboBox getLimitComboBox(){
        return limitComboBox;
    }

   
        
    
}
