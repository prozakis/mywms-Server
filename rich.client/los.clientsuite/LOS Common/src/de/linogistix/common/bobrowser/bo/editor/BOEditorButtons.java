/*
 * Copyright (c) 2006 - 2010 LinogistiX GmbH
 * 
 *  www.linogistix.com
 *  
 *  Project myWMS-LOS
 */
package de.linogistix.common.bobrowser.bo.editor;

import de.linogistix.common.bobrowser.bo.BONode;
import de.linogistix.common.bobrowser.crud.BOCreateAction;
import de.linogistix.common.bobrowser.crud.BODeleteAction;
import de.linogistix.common.bobrowser.crud.BOEditAction;
import de.linogistix.common.res.CommonBundleResolver;
import de.linogistix.common.res.icon.IconResolver;
import de.linogistix.common.userlogin.LoginService;
import de.linogistix.common.util.ExceptionAnnotator;
import javax.swing.Icon;
import org.openide.util.Lookup;
import org.openide.util.actions.SystemAction;
import org.openide.util.lookup.Lookups;

/**
 *
 * @author  trautm
 */
public class BOEditorButtons extends javax.swing.JPanel implements Lookup.Provider{
  
  Lookup lookup;
  BONode bo;
  
  protected Icon editIcon = new javax.swing.ImageIcon(
                                    IconResolver.class.getResource(
                                    "/de/linogistix/common/res/icon/Edit.png"));
    
  protected Icon createIcon = new javax.swing.ImageIcon(
                                    IconResolver.class.getResource(
                                    "/de/linogistix/common/res/icon/Create.png"));
  
  protected Icon removeIcon = new javax.swing.ImageIcon(
                                    IconResolver.class.getResource(
                                    "/de/linogistix/common/res/icon/Remove.png"));
  
  /** Creates new form BOEditorButtons */
  public BOEditorButtons(BONode bo, Lookup lookup) {
    
    if (lookup == null){
      throw new NullPointerException();
    }
    
    if (bo == null){
      throw new NullPointerException();
    }
    
    this.bo = bo;
    this.lookup = lookup;
    initComponents();
    LoginService login = (LoginService) Lookup.getDefault().lookup(LoginService.class);

    editButton.setText(org.openide.util.NbBundle.getMessage(CommonBundleResolver.class, "Edit"));
    editButton.setMnemonic(org.openide.util.NbBundle.getMessage(CommonBundleResolver.class, "Edit_Mnemonic").charAt(0));

    editButton.setToolTipText(org.openide.util.NbBundle.getMessage(CommonBundleResolver.class, "edit_DESCR"));
    editButton.setEnabled(this.bo.getCrudService() != null && login.checkWritePermission(this.bo.getBo()));

    createButton.setText(org.openide.util.NbBundle.getMessage(CommonBundleResolver.class, "Create"));
    createButton.setMnemonic(org.openide.util.NbBundle.getMessage(CommonBundleResolver.class, "Create_Mnemonic").charAt(0));
    createButton.setToolTipText(org.openide.util.NbBundle.getMessage(CommonBundleResolver.class, "create_DESCR"));
    createButton.setEnabled(this.bo.getCrudService() != null && login.checkWritePermission(this.bo.getBo()));

    deleteButton.setText(org.openide.util.NbBundle.getMessage(CommonBundleResolver.class, "Delete"));
    deleteButton.setMnemonic(org.openide.util.NbBundle.getMessage(CommonBundleResolver.class, "Delete_Mnemonic").charAt(0));
    deleteButton.setToolTipText(org.openide.util.NbBundle.getMessage(CommonBundleResolver.class, "delete_DESCR"));
    deleteButton.setEnabled(this.bo.getCrudService() != null && login.checkWritePermission(this.bo.getBo()));
  }
  
  public Lookup getLookup(){
    return lookup;
  }
  
  
  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonPanel = new javax.swing.JPanel();
        editButton = new javax.swing.JButton();
        createButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();

        setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        buttonPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        editButton.setIcon(editIcon);
        editButton.setText("null");
        editButton.setToolTipText("null");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(editButton);

        createButton.setIcon(createIcon);
        createButton.setText("null");
        createButton.setToolTipText("null");
        createButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(createButton);

        deleteButton.setIcon(removeIcon);
        deleteButton.setText("null");
        deleteButton.setToolTipText("null");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(deleteButton);

        add(buttonPanel);
    }// </editor-fold>//GEN-END:initComponents
  
  private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
    try{
      BOEditAction edit = (BOEditAction)SystemAction.get(BOEditAction.class);
      edit.createContextAwareInstance(getLookup()).actionPerformed(null);
    } catch (Throwable t){
      ExceptionAnnotator.annotate(t);
    }
}//GEN-LAST:event_editButtonActionPerformed
  
  private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
    try{
      BODeleteAction del = (BODeleteAction)SystemAction.get(BODeleteAction.class);
      del.createContextAwareInstance(getLookup()).actionPerformed(null);
    } catch (Throwable t){
      ExceptionAnnotator.annotate(t);
    }
}//GEN-LAST:event_deleteButtonActionPerformed
  
  private void createButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createButtonActionPerformed
    try{
      BOCreateAction create = (BOCreateAction)SystemAction.get(BOCreateAction.class);
      Lookup l = Lookups.singleton(bo);
      create.createContextAwareInstance(l).actionPerformed(null);
    } catch (Throwable t){
      ExceptionAnnotator.annotate(t);
    }
}//GEN-LAST:event_createButtonActionPerformed
  
  
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton createButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton editButton;
    // End of variables declaration//GEN-END:variables
  
}
