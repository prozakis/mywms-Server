/*
 * Copyright (c) 2010 LinogistiX GmbH
 * 
 *  www.linogistix.com
 *  
 *  Project myWMS-LOS
 */
package de.linogistix.reference.about;

import de.linogistix.common.services.J2EEServiceLocatorException;
import javax.swing.JRootPane;
import org.openide.util.Exceptions;
import org.openide.util.Lookup;
import de.linogistix.common.services.J2EEServiceLocator;
import de.linogistix.los.common.facade.VersionFacade;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.Point;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.util.MissingResourceException;
import javax.swing.ImageIcon;
import javax.swing.JComponent;
import javax.swing.KeyStroke;
import org.openide.windows.WindowManager;

/**
 *
 * @author  krane
 */
public class AboutBox extends javax.swing.JDialog {

    /** Creates new form AboutBox */
    public AboutBox(java.awt.Frame parent, boolean modal) {
        super(WindowManager.getDefault().getMainWindow(), modal);
        initComponents();

        Dimension fd = this.getSize();
        Point wp = WindowManager.getDefault().getMainWindow().getLocation();
        Dimension wd = WindowManager.getDefault().getMainWindow().getSize();
        Point fp = new Point();
        
        int x = (int)wp.getX();
        if( wd.getWidth() > fd.getWidth() ) {
            x += (((int)(wd.getWidth() - fd.getWidth()))/2);
        }
        int y = (int)wp.getY();
        if( wd.getHeight() > fd.getHeight() ) {
            y += (((int)(wd.getHeight() - fd.getHeight()))/2);
        }
        this.setLocation( new Point(x,y) );
        
        ImageIcon icon = null;
        try {
            icon = new javax.swing.ImageIcon(getClass().getResource("/de/linogistix/reference/about/about.gif"));
        } catch( Throwable t ) {}
        if( icon != null ) {
            double fctWidth = logoImage.getWidth();
            fctWidth /= icon.getIconWidth();
            double fctHeigth = logoImage.getHeight();
            fctHeigth /= icon.getIconHeight();
            double fct= fctWidth > fctHeigth ? fctHeigth : fctWidth;
            logoImage.setIcon( new ImageIcon(icon.getImage().getScaledInstance((int)(icon.getIconWidth()*fct), (int)(icon.getIconHeight()*fct), Image.SCALE_SMOOTH)) );
        }

        copyrightText.setBackground(logoImage.getBackground());

        J2EEServiceLocator loc = (J2EEServiceLocator) Lookup.getDefault().lookup(J2EEServiceLocator.class);
        String text = "";
        
        try {
            copyrightText.setText(org.openide.util.NbBundle.getMessage(AboutBox.class, "AboutBox.copyrightText"));
            
            text = org.openide.util.NbBundle.getMessage(AboutBox.class, "AboutBox.clientVersionText");
            text += ", Build " + org.openide.util.NbBundle.getMessage(AboutBox.class, "build.date").trim();
            text += org.openide.util.NbBundle.getMessage(AboutBox.class, "build.time").trim();
        }
        catch( MissingResourceException e ) {}
        copyrightText.setCaretPosition(0);

        text += "<br>";
        text += "<b>Netbeans Platform</b> "+System.getProperty("netbeans.buildnumber")+"<br>";
        text += "<b>Java-Version</b> " + System.getProperty("java.version") + "<br>";
        text += "<b>Java-Vendor</b> " + System.getProperty("java.vendor") + "<br><br>";
        
        try {
            VersionFacade m = loc.getStateless(VersionFacade.class);
            text += m.getInfo();
        } catch (J2EEServiceLocatorException ex) {
            Exceptions.printStackTrace(ex);
        }

        jEditorPane1.setText(text);
        jEditorPane1.setCaretPosition(0);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        logoImage = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        copyrightText = new javax.swing.JEditorPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(org.openide.util.NbBundle.getMessage(AboutBox.class, "AboutBox.title"));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);

        logoImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        logoImage.setText(org.openide.util.NbBundle.getMessage(AboutBox.class, "AboutBox.logoImage.text"));
		logoImage.setFocusable(false);

        jButton1.setText(org.openide.util.NbBundle.getMessage(AboutBox.class, "AboutBox.jButton1.text"));
        jButton1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton1KeyPressed(evt);
            }
        });
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jEditorPane1.setContentType(org.openide.util.NbBundle.getMessage(AboutBox.class, "AboutBox.jEditorPane1.contentType")); // NOI18N
        jEditorPane1.setEditable(false);
        jEditorPane1.setText(org.openide.util.NbBundle.getMessage(AboutBox.class, "AboutBox.jEditorPane1.text"));
        jScrollPane1.setViewportView(jEditorPane1);

        jScrollPane2.setBorder(null);

        copyrightText.setBorder(null);
        copyrightText.setContentType(org.openide.util.NbBundle.getMessage(AboutBox.class, "AboutBox.copyrightText.contentType")); // NOI18N
        copyrightText.setEditable(false);
        jScrollPane2.setViewportView(copyrightText);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(jButton1)
                .addContainerGap())
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 430, Short.MAX_VALUE)
                .addContainerGap())
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 430, Short.MAX_VALUE)
                .addContainerGap())
            .add(logoImage, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(logoImage, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 256, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 77, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 60, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jButton1)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void jButton1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton1KeyPressed
    setVisible(false);
}//GEN-LAST:event_jButton1KeyPressed

private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
    setVisible(false);
}//GEN-LAST:event_jButton1MouseClicked

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AboutBox dialog = new AboutBox(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JEditorPane copyrightText;
    private javax.swing.JButton jButton1;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel logoImage;
    // End of variables declaration//GEN-END:variables

    @Override
    protected JRootPane createRootPane() {
        ActionListener actionListener = new ActionListener() {
          public void actionPerformed(ActionEvent actionEvent) {
            setVisible(false);
          }
        };
        JRootPane rootPane = new JRootPane();
        KeyStroke stroke = KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0);
        rootPane.registerKeyboardAction(actionListener, stroke, JComponent.WHEN_IN_FOCUSED_WINDOW);
        return rootPane;
    }


    private String getInfoText() {
        J2EEServiceLocator loc = (J2EEServiceLocator) Lookup.getDefault().lookup(J2EEServiceLocator.class);
        String text = "";
        
        text = org.openide.util.NbBundle.getMessage(AboutBox.class, "AboutBox.clientVersionText");
        try {
            text += ", Build " + org.openide.util.NbBundle.getMessage(AboutBox.class, "build.date");
            text += org.openide.util.NbBundle.getMessage(AboutBox.class, "build.time");
            text += "<br>";
        }
        catch( MissingResourceException e ) {}
        
        text += "Netbeans Platform-"+System.getProperty("netbeans.buildnumber");
        text += "<br><b>Java-Version</b> " + System.getProperty("java.version") + "<br><br>";
        
        try {
            VersionFacade m = loc.getStateless(VersionFacade.class);
            text += m.getInfo();
        } catch (J2EEServiceLocatorException ex) {
            Exceptions.printStackTrace(ex);
        }
        
        return text;
        //jEditorPane1.setText(text);
        //jEditorPane1.scrollRectToVisible(new Rectangle(1,1));
        //jScrollPane1.scrollRectToVisible(new Rectangle(1,1));

    }
    
}
